---
const texts = ["Senuri", "a UI/UX Designer", "a Frontend Developer"];
---

<section class="hero">
  <div class="hero-content">
    <div class="avatar-container">
      <img src="/images/avatar.jpg" alt="Profile avatar" class="avatar" />
    </div>

    <div class="intro-text">
      <div class="greeting-container">
        <p class="greeting">Hello! I Am</p>
        <div class="typing-container">
          <span id="typing-text"></span>
          <span class="cursor">|</span>
        </div>
      </div>

      <div class="title-container">
        <p class="designer-text">A Developer who</p>
        <h1 class="main-title">
          Turns design into code <span class="highlight"
            >and ideas into <span class="cover-text">experiences</span>...</span
          >
        </h1>
        <p class="subtitle">
          Because front-end is where creativity meets functionality.
        </p>
      </div>
    </div>
  </div>

  <div class="about-me-card">
    <h2 class="section-title">About Me</h2>
    <div class="card-content">
      <h3 class="role-title">I'm a Software Engineer</h3>
      <p class="current-role">
        Currently, I'm an Undergraduate Software Engineering Student at
        University Of Plymouth
      </p>

      <div class="bio">
        <p>
          I'm passionate about UI design and front-end development, where I get
          to blend creativity with technology. I love crafting visually
          appealing and user-friendly interfaces while constantly exploring new
          technologies to stay ahead in the field. Whether it's building sleek
          websites or enhancing user experiences, I enjoy turning ideas into
          digital reality.
        </p>
      </div>
    </div>
  </div>
</section>

<style>
  .hero {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;
    padding: 0 1rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .hero::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
      circle at 20% 30%,
      rgba(138, 79, 255, 0.2) 0%,
      transparent 60%
    );
    pointer-events: none;
    z-index: -1;
  }

  .hero-content {
    display: flex;
    align-items: center;
    gap: 2rem;
    margin-bottom: 5rem;
  }

  .avatar-container {
    position: relative;
    width: 220px;
    height: 220px;
    border-radius: 50%; /* Make it a circle */
    overflow: hidden; /* Clip the image to the circle */
  }

  .avatar {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Ensure the image covers the container */
  }

  .intro-text {
    flex: 1;
  }

  .greeting-container {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 2rem;
  }

  .greeting {
    font-size: 2rem;
    margin-bottom: 0;
    white-space: nowrap;
  }

  .typing-container {
    min-height: 50px;
    position: relative;
    color: #8a4fff;
    font-size: 2rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    margin-bottom: 0;
  }

  .cursor {
    display: inline-block;
    margin-left: 3px;
    animation: blink 1s infinite;
  }

  @keyframes blink {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
  }

  .name {
    color: #8a4fff;
    font-weight: 500;
    margin-left: 0.5rem;
  }

  .designer-text {
    font-size: 1.2rem;
    margin-bottom: 0.5rem;
  }

  .main-title {
    font-size: 3.5rem;
    font-weight: 700;
    line-height: 1.2;
    margin-bottom: 0.5rem;
  }

  .highlight {
    position: relative;
  }

  .cover-text {
    color: #8a4fff;
    position: relative;
  }

  .cover-text::after {
    content: "";
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 100%;
    height: 2px;
    background: #8a4fff;
    border-radius: 1px;
  }

  .subtitle {
    font-size: 0.95rem;
    color: #aaa;
    margin-top: 0.75rem;
  }

  .about-me-card {
    max-width: 800px;
    background: rgba(255, 255, 255, 0.03);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 16px;
    padding: 2rem;
    margin: 0 auto;
    backdrop-filter: blur(10px);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .about-me-card::before {
    content: "";
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: conic-gradient(
      from 0deg,
      transparent 0%,
      #8a4fff 25%,
      transparent 50%
    );
    animation: rotate 4s linear infinite;
    opacity: 0.5; /* Changed from 0 to 0.5 to make it always visible */
  }

  .about-me-card::after {
    content: "";
    position: absolute;
    inset: 2px;
    background: rgb(17, 17, 17);
    border-radius: 14px;
    z-index: 0;
  }

  .card-content {
    position: relative;
    z-index: 1;
    padding: 1rem;
  }

  .section-title {
    position: relative;
    z-index: 1;
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @media (max-width: 768px) {
    .hero-content {
      flex-direction: column;
      text-align: center;
    }

    .about-me-card {
      margin: 0 1rem;
      padding: 1.5rem;
    }

    .card-content {
      padding: 0.5rem;
    }

    .typing-container {
      justify-content: center;
      text-align: center;
      width: 100%;
    }

    .greeting-container {
      justify-content: center;
      flex-wrap: wrap;
    }
  }
</style>

<script>
  const phrases = [
    "Senuri Perera",
    " An UI/UX Designer",
    "A Frontend Developer",
  ];
  let currentPhraseIndex = 0;
  let currentCharIndex = 0;
  let isDeleting = false;
  let typingElement = null;

  function sleep(ms) {
    return new Promise((resolve) => setTimeout(resolve, ms));
  }

  async function typeText() {
    typingElement = document.getElementById("typing-text");
    if (!typingElement) return;

    while (true) {
      const currentPhrase = phrases[currentPhraseIndex];

      if (!isDeleting) {
        if (currentCharIndex < currentPhrase.length) {
          typingElement.textContent += currentPhrase[currentCharIndex];
          currentCharIndex++;
          await sleep(100);
        } else {
          await sleep(2000);
          isDeleting = true;
        }
      } else {
        if (currentCharIndex > 0) {
          typingElement.textContent = currentPhrase.substring(
            0,
            currentCharIndex - 1
          );
          currentCharIndex--;
          await sleep(50);
        } else {
          isDeleting = false;
          currentPhraseIndex = (currentPhraseIndex + 1) % phrases.length;
          await sleep(500);
        }
      }
    }
  }

  // Function to initialize the typing animation
  function initTypeWriter() {
    // Reset any existing animation
    currentPhraseIndex = 0;
    currentCharIndex = 0;
    isDeleting = false;

    // Start new animation
    typeText().catch(console.error);
  }

  // Run on initial page load
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initTypeWriter);
  } else {
    initTypeWriter();
  }

  // Run on Astro page transitions
  document.addEventListener("astro:page-load", initTypeWriter);
</script>
